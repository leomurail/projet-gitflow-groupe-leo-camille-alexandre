name: üîç Check required files & changelog

on:
  pull_request:
  push:
    branches: [main, develop]
    tags:
      - 'v*'          # ex: v1.0.1
      - '[0-9]*'      # ex: 1.0.1

jobs:
  check-required-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Verify presence of essential files
        shell: bash
        run: |
          missing=0
          for f in README.md CHANGELOG.md LICENSE CONTRIBUTING.md; do
            if [[ ! -f "$f" ]]; then
              echo "::error file=$f::‚ùå Fichier requis manquant"
              missing=1
            fi
          done
          exit $missing

  changelog-consistency:
    name: Validate CHANGELOG vs latest tag
    runs-on: ubuntu-latest
    needs: [check-required-files]
    steps:
      - name: Checkout with full history (for tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Ensure CHANGELOG.md exists
        shell: bash
        run: |
          [[ -f CHANGELOG.md ]] || { echo "::error file=CHANGELOG.md::‚ùå CHANGELOG.md introuvable"; exit 1; }
          echo "‚úÖ CHANGELOG.md trouv√©."

      - name: Determine latest semver tag
        id: latest
        shell: bash
        run: |
          # Si l'√©v√©nement courant est un push de tag, on l'utilise directement
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            latest_tag="${{ github.ref_name }}"
          else
            # Sinon on r√©cup√®re le plus r√©cent tag semver (avec/sans 'v')
            git fetch --tags --force --prune >/dev/null 2>&1 || true
            latest_tag="$(git for-each-ref refs/tags \
              --sort=-v:refname \
              --format='%(refname:short)' \
              'refs/tags/v[0-9]*.[0-9]*.[0-9]*' 'refs/tags/[0-9]*.[0-9]*.[0-9]*' \
              | head -n1)"
          fi

          if [[ -z "$latest_tag" ]]; then
            echo "::error::‚ùå Aucun tag semver trouv√© (ex: v1.0.1)."
            exit 1
          fi

          echo "üîñ Dernier tag d√©tect√© : $latest_tag"
          echo "tag=$latest_tag" >> "$GITHUB_OUTPUT"

      - name: Check if latest tag is referenced in CHANGELOG.md
        shell: bash
        run: |
          tag="${{ steps.latest.outputs.tag }}"
          tag_nov="${tag#v}"                               # 1.0.1
          esc_tag_nov="$(printf '%s' "$tag_nov" | sed 's/\./\\./g')"

          echo "üîé Recherche de '$tag' (et '$tag_nov') dans CHANGELOG.md..."
          # Accepte : '## vX.Y.Z' | '## X.Y.Z' | '[vX.Y.Z]' | '[X.Y.Z]' | mention libre
          if grep -Eiq "(\[v?${esc_tag_nov}\])|(^## +v?${esc_tag_nov}\b)|([^0-9A-Za-z]v?${esc_tag_nov}([^0-9.]|$))" CHANGELOG.md; then
            echo "‚úÖ Coh√©rence OK : '$tag' est r√©f√©renc√©."
          else
            echo "::error file=CHANGELOG.md::‚ùå Incoh√©rence : la derni√®re version tagu√©e '$tag' n'est pas r√©f√©renc√©e."
            echo "üí° Exemple attendu :"
            echo "   ## [${tag_nov}] - 2025-10-08"
            echo "   - Ajout : ..."
            echo "   - Correctif : ..."
            exit 1
          fi
