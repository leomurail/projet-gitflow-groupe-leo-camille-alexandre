name: ðŸ§© Check branch naming (Git Flow)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, edited]
  workflow_dispatch: {}  # pour tester manuellement si besoin

permissions:
  contents: read
  pull-requests: read

jobs:
  check-branch-name:
    runs-on: ubuntu-latest
    steps:
      - name: Determine branch name
        id: b
        shell: bash
        run: |
          # Sur un event pull_request, c'est le nom de la branche source de la PR
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          if [ -z "$BRANCH_NAME" ]; then
            # fallback (ex. run manuel)
            BRANCH_NAME="${{ github.ref_name }}"
          fi
          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
          echo "ðŸ”Ž Branch dÃ©tectÃ©e: $BRANCH_NAME"

      - name: Validate against allowed patterns
        shell: bash
        run: |
          BRANCH="${{ steps.b.outputs.branch }}"

          # AutorisÃ©s :
          # - main
          # - develop
          # - feature/<qqchose>
          # - release/x.y.z
          # - hotfix/x.y.z
          REGEX='^(main|develop|feature\/[A-Za-z0-9._-]+|release\/[0-9]+\.[0-9]+\.[0-9]+|hotfix\/[0-9]+\.[0-9]+\.[0-9]+)$'

          if [[ "$BRANCH" =~ $REGEX ]]; then
            echo "âœ… Nom de branche valide."
          else
            echo "::error::ðŸš« Nom de branche invalide: '$BRANCH'."
            echo "::error::Attendu: 'main', 'develop', 'feature/<nom>', 'release/x.y.z' ou 'hotfix/x.y.z'."
            echo "Exemples valides :"
            echo " - feature/login-page"
            echo " - release/1.2.3"
            echo " - hotfix/1.2.4"
            exit 1
          fi
